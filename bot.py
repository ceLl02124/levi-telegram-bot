import asyncio
from collections import defaultdict
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from huggingface_hub import InferenceClient
import os

# –¢–æ–∫–µ–Ω—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_API_TOKEN = os.getenv("TELEGRAM_API_TOKEN")
HF_TOKEN = os.getenv("HF_TOKEN")

bot = Bot(token=TELEGRAM_API_TOKEN)
dp = Dispatcher()
client = InferenceClient(token=HF_TOKEN)

user_memory = defaultdict(list)

SYSTEM_PROMPT = (
    "–¢—ã ‚Äî –õ–µ–≤–∏ –ê–∫–∫–µ—Ä–º–∞–Ω –∏–∑ '–ê—Ç–∞–∫–∏ –¢–∏—Ç–∞–Ω–æ–≤'. –ì–æ–≤–æ—Ä–∏ –≥—Ä—É–±–æ, —Ö–æ–ª–æ–¥–Ω–æ, –ª–æ–≥–∏—á–Ω–æ. "
    "–ù–∏–∫–∞–∫–æ–π –≤–æ–¥—ã. –û—Ç–≤–µ—á–∞–π –≤ —Ä–æ–ª–µ–≤–æ–º —Å—Ç–∏–ª–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —ç–º–æ—Ü–∏–π, –¥–µ–π—Å—Ç–≤–∏–π –∏ –º—ã—Å–ª–µ–π.\n\n"
)

async def generate_levi_reply(user_id: int, user_text: str) -> str:
    memory = user_memory[user_id][-10:]
    dialogue = "\n".join([f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {msg['user']}\n–õ–µ–≤–∏: {msg['levi']}" for msg in memory])
    prompt = f"{SYSTEM_PROMPT}{dialogue}\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_text}\n–õ–µ–≤–∏:"

    try:
        response = client.text_generation(
            prompt,
            model="tiiuae/falcon-7b-instruct",
            max_new_tokens=500,
            temperature=0.7,
            top_p=0.95,
            do_sample=True,
        )
        reply = response.strip().split("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")[0].strip()
        user_memory[user_id].append({"user": user_text, "levi": reply})
        return reply
    except Exception as e:
        print("–û—à–∏–±–∫–∞ HuggingFace:", e)
        return "..."

@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("–õ–µ–≤–∏: –ù–µ —Ç—Ä–∞—Ç—å –º–æ—ë –≤—Ä–µ–º—è. –ù–∞—á–∏–Ω–∞–π —É–∂–µ.")

@dp.message()
async def handle_message(message: types.Message):
    user_id = message.from_user.id
    text = message.text.strip()

    if not text:
        await message.reply("–õ–µ–≤–∏: –¢—ã –±—É–¥–µ—à—å –º–æ–ª—á–∞—Ç—å –∏–ª–∏ –Ω–∞—á–Ω—ë—à—å –≥–æ–≤–æ—Ä–∏—Ç—å?")
        return

    reply = await generate_levi_reply(user_id, text)
    await message.reply(reply)

async def main():
    print("ü§ñ –õ–µ–≤–∏ –∞–∫—Ç–∏–≤–µ–Ω")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
